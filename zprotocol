- Introduction
Include:
- What is a micropayment? Why do they need to be considered separate from normal payments?
- What is a probabilistic micropayment scheme?
- What drawback of probabilistic micropayment schemes are we trying to solve? What benefit will solving it bring?
- What is the proposed solution?

Micropayments, defined as payments worth pennies or fractions of pennies[1], are of interest in cryptocurrency research since processing them as normal transactions may result in transaction fees that exceed the value of the payment itself. One class of micropayment schemes, namely probabilistic micropayment schemes, offer a simple way to aggregate low-value transactions across merchant-client pairs[2] through cryptographic lotteries. However, the requirement of two-way communication during every lottery round as well as the amount of state-keeping required can cause significant overhead to resource-constrained (eg: IoT) devices. To solve this, we propose a non-interactive probabilistic micropayment scheme called ZProtocol that uses distributed randomness beacons to allow merchants and clients to delegate the lottery to any third party or smart contract while preserving the unbiasedness of the lottery.

- Protocol Description
Step 1. The merchant (M) and the client (C) agree on a macropayment value (V), desired win probability (p), winning ticket number (w), lottery interval in seconds (i) and total number of lottery draws (l).
Step 2. M generates a random string x_M and sends y_M = H(x_M) to C as commitment, where H() is a cryptographic hash function. Similarly, C generates x_C and sends y_C = H(x_C) to M as commitment.
Step 3. M and C disclose x_M and x_C to each other; and they verify that y_M and y_C are valid commitments for x_M and x_C.
Step 4. The transcript of steps 1-3 defined as t=(M, C, V, p, w, i, l, y_M, x_M, y_C, x_C) is signed by M and C and provided to their choice of third party T.
Step 5. Let the duration of one round of the distributed randomness beacon be d seconds. Assume that i divides d. Let d/i = n. During every round r of the distributed randomness beacon b_r, T calculates the following sequence:
    L^1_r = H(b_r xor x_M xor x_C), L^2_r = H(L^1_r), ..., L^n_r = H(L^n-1_r)
Step 6. The merchant wins the ith lottery in randomness beacon round r if L^i_r = w, in which case T notifies M and C. A total of l lottery draws are made.

- Discussion & Simulation
Include:
- Why do we think that the protocol works? (remember the discussion about whether any party can influence the result of the lottery)
- What was the goal of our simulation?
- How exactly did we do the simulation? Which randomness beacon did we use?

- Results & Future work
Include:
- What did the graphs show us?
- What more is to be done to ensure that our protocol works?
- What can be done in the future to improve the protocol?
